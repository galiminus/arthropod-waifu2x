#!/usr/bin/env ruby

require 'optparse'
require 'aws-sdk-sqs'
require 'arthropod'
require 'arthropod_waifu2x/scaler'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: #{$PROGRAM_NAME} [options]"

  opts.on("-q", "--queue [string]", "SQS queue name") do |q|
    options[:queue] = q
  end
  opts.on("-i", "--access-key-id [string]", "AWS access key ID, default to the AWS_ACCESS_KEY_ID environment variable") do |i|
    options[:access_key_id] = i
  end
  opts.on("-k", "--secret-access-key [string]", "AWS secret access key, default to the AWS_SECRET_ACCESS_KEY environment variable") do |k|
    options[:secret_access_key] = k
  end
  opts.on("-r", "--region [string]", "AWS region, default to the AWS_REGION environment variable") do |r|
    options[:region] = r
  end
  opts.on("-w", "--waifu [string]", "Waifu2X install directory, default to WAIFU environment variable or /opt/waifu2x") do |w|
    options[:waifu] = w
  end

end.parse!

client = Aws::SQS::Client.new({
  access_key_id: options[:access_key_id] || ENV["AWS_ACCESS_KEY_ID"],
  secret_access_key: options[:secret_access_key] || ENV["AWS_SECRET_ACCESS_KEY"],
  region: options[:region] || ENV["AWS_REGION"],
})

loop do
  Arthropod::Server.pull(client: client, queue_name: options[:queue] || ENV["QUEUE_NAME"]) do |request|
    ArthropodWaifu2x::Scaler.new({
      waifu: options[:waifu] || ENV["WAIFU"] || "/opt/waifu2x",
      image_url: request.body["image_url"],
      aws_access_key_id: request.body["aws_access_key_id"],
      aws_secret_access_key: request.body["aws_secret_access_key"],
      region: request.body["region"],
      endpoint: request.body["endpoint"],
      host: request.body["host"],
      root_dir: request.body["root_dir"],
      bucket: request.body["bucket"],
    }).perform!
  end
end
